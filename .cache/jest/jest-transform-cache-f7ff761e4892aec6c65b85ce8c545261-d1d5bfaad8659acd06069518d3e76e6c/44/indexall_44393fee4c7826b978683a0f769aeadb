b4f6c0a00d1d1358510b0f187d24e351
"use strict";

/* istanbul ignore next */
function cov_1rognqyrzv() {
  var path = "/Users/oleksiimalichenko/Documents/Tutorial/storefrot/src/Services/Tests/index-all.ts";
  var hash = "e848e1ae2e17648f833803deb0a6bea7e31090f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/oleksiimalichenko/Documents/Tutorial/storefrot/src/Services/Tests/index-all.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 89
        }
      },
      "4": {
        start: {
          line: 4,
          column: 71
        },
        end: {
          line: 4,
          column: 83
        }
      },
      "5": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "6": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "7": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 17
        }
      },
      "8": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "9": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 126
        }
      },
      "10": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 126
        }
      },
      "11": {
        start: {
          line: 10,
          column: 95
        },
        end: {
          line: 10,
          column: 126
        }
      },
      "12": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "13": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 5,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 59
          }
        },
        loc: {
          start: {
            line: 4,
            column: 69
          },
          end: {
            line: 4,
            column: 85
          }
        },
        line: 4
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 5,
            column: 6
          },
          end: {
            line: 5,
            column: 7
          }
        },
        loc: {
          start: {
            line: 5,
            column: 28
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 5
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 9,
            column: 51
          }
        },
        loc: {
          start: {
            line: 9,
            column: 71
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 8,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 8,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 8,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 5,
            column: 1
          }
        }, {
          start: {
            line: 5,
            column: 6
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        }],
        line: 6
      },
      "4": {
        loc: {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 11,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 20
          },
          end: {
            line: 9,
            column: 24
          }
        }, {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 9,
            column: 45
          }
        }, {
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 11,
            column: 1
          }
        }],
        line: 9
      },
      "5": {
        loc: {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 10,
            column: 126
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 10,
            column: 126
          }
        }, {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 10,
            column: 126
          }
        }],
        line: 10
      },
      "6": {
        loc: {
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 10,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 10,
            column: 40
          }
        }, {
          start: {
            line: 10,
            column: 44
          },
          end: {
            line: 10,
            column: 93
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/oleksiimalichenko/Documents/Tutorial/storefrot/src/Services/Tests/index-all.ts",
      mappings: ";;;;;;;;;;;;AAAA,0DAAwC",
      names: [],
      sources: ["/Users/oleksiimalichenko/Documents/Tutorial/storefrot/src/Services/Tests/index-all.ts"],
      sourcesContent: ["export * from './Utils/renderComponent';\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e848e1ae2e17648f833803deb0a6bea7e31090f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rognqyrzv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1rognqyrzv();

var __createBinding =
/* istanbul ignore next */
(cov_1rognqyrzv().s[0]++,
/* istanbul ignore next */
(cov_1rognqyrzv().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1rognqyrzv().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1rognqyrzv().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1rognqyrzv().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1rognqyrzv().f[0]++;
  cov_1rognqyrzv().s[1]++;

  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1rognqyrzv().b[2][0]++;
    cov_1rognqyrzv().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1rognqyrzv().b[2][1]++;
  }

  cov_1rognqyrzv().s[3]++;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      /* istanbul ignore next */
      cov_1rognqyrzv().f[1]++;
      cov_1rognqyrzv().s[4]++;
      return m[k];
    }
  });
}) :
/* istanbul ignore next */
(cov_1rognqyrzv().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1rognqyrzv().f[2]++;
  cov_1rognqyrzv().s[5]++;

  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1rognqyrzv().b[3][0]++;
    cov_1rognqyrzv().s[6]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1rognqyrzv().b[3][1]++;
  }

  cov_1rognqyrzv().s[7]++;
  o[k2] = m[k];
})));

var __exportStar =
/* istanbul ignore next */
(cov_1rognqyrzv().s[8]++,
/* istanbul ignore next */
(cov_1rognqyrzv().b[4][0]++, this) &&
/* istanbul ignore next */
(cov_1rognqyrzv().b[4][1]++, this.__exportStar) ||
/* istanbul ignore next */
(cov_1rognqyrzv().b[4][2]++, function (m, exports) {
  /* istanbul ignore next */
  cov_1rognqyrzv().f[3]++;
  cov_1rognqyrzv().s[9]++;

  for (var p in m) {
    /* istanbul ignore next */
    cov_1rognqyrzv().s[10]++;

    if (
    /* istanbul ignore next */
    (cov_1rognqyrzv().b[6][0]++, p !== "default") &&
    /* istanbul ignore next */
    (cov_1rognqyrzv().b[6][1]++, !Object.prototype.hasOwnProperty.call(exports, p))) {
      /* istanbul ignore next */
      cov_1rognqyrzv().b[5][0]++;
      cov_1rognqyrzv().s[11]++;

      __createBinding(exports, m, p);
    } else
    /* istanbul ignore next */
    {
      cov_1rognqyrzv().b[5][1]++;
    }
  }
}));

/* istanbul ignore next */
cov_1rognqyrzv().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1rognqyrzv().s[13]++;

__exportStar(require("./Utils/renderComponent"), exports);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9vbGVrc2lpbWFsaWNoZW5rby9Eb2N1bWVudHMvVHV0b3JpYWwvc3RvcmVmcm90L3NyYy9TZXJ2aWNlcy9UZXN0cy9pbmRleC1hbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsWUFBQSxDQUFBLE9BQUEsQ0FBQSx5QkFBQSxDQUFBLEVBQUEsT0FBQSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9VdGlscy9yZW5kZXJDb21wb25lbnQnO1xuIl19